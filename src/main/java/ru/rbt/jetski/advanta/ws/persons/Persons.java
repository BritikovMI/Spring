
package ru.rbt.jetski.advanta.ws.persons;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "Persons", targetNamespace = "http://streamline/", wsdlLocation = "https://rbtn.a2nta.ru/components/services/persons.asmx?WSDL")
public class Persons
    extends Service
{

    private final static URL PERSONS_WSDL_LOCATION;
    private final static WebServiceException PERSONS_EXCEPTION;
    private final static QName PERSONS_QNAME = new QName("http://streamline/", "Persons");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("https://rbtn.a2nta.ru/components/services/persons.asmx?WSDL");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        PERSONS_WSDL_LOCATION = url;
        PERSONS_EXCEPTION = e;
    }

    public Persons() {
        super(__getWsdlLocation(), PERSONS_QNAME);
    }

    public Persons(WebServiceFeature... features) {
        super(__getWsdlLocation(), PERSONS_QNAME, features);
    }

    public Persons(URL wsdlLocation) {
        super(wsdlLocation, PERSONS_QNAME);
    }

    public Persons(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, PERSONS_QNAME, features);
    }

    public Persons(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Persons(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns PersonsSoap
     */
    @WebEndpoint(name = "PersonsSoap")
    public PersonsSoap getPersonsSoap() {
        return super.getPort(new QName("http://streamline/", "PersonsSoap"), PersonsSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PersonsSoap
     */
    @WebEndpoint(name = "PersonsSoap")
    public PersonsSoap getPersonsSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://streamline/", "PersonsSoap"), PersonsSoap.class, features);
    }

    /**
     *
     * @return
     *     returns PersonsSoap
     */
    @WebEndpoint(name = "PersonsSoap12")
    public PersonsSoap getPersonsSoap12() {
        return super.getPort(new QName("http://streamline/", "PersonsSoap12"), PersonsSoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PersonsSoap
     */
    @WebEndpoint(name = "PersonsSoap12")
    public PersonsSoap getPersonsSoap12(WebServiceFeature... features) {
        return super.getPort(new QName("http://streamline/", "PersonsSoap12"), PersonsSoap.class, features);
    }

    /**
     *
     * @return
     *     returns PersonsHttpPost
     */
    @WebEndpoint(name = "PersonsHttpPost")
    public PersonsHttpPost getPersonsHttpPost() {
        return super.getPort(new QName("http://streamline/", "PersonsHttpPost"), PersonsHttpPost.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PersonsHttpPost
     */
    @WebEndpoint(name = "PersonsHttpPost")
    public PersonsHttpPost getPersonsHttpPost(WebServiceFeature... features) {
        return super.getPort(new QName("http://streamline/", "PersonsHttpPost"), PersonsHttpPost.class, features);
    }

    private static URL __getWsdlLocation() {
        if (PERSONS_EXCEPTION!= null) {
            throw PERSONS_EXCEPTION;
        }
        return PERSONS_WSDL_LOCATION;
    }

}
